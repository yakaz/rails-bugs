<div <%= "id=#{(f.object.key || 'new_lookup_keys').to_s.gsub(' ','_')}" %> class="fields" >

  <%= remove_child_link "Remove #{f.object.new_record? ? "Value" : f.object}", f unless controller_name == "lookup_values" %>

  <%=
    if params["lookup_value_id"] # new value inside a lookup_key (REST nesting only)
      # Show the parent lookup key as a context, but permit no change
      f.collection_select :lookup_value_id, [Puppetclass.from_param(params["lookup_value_id"])], :id, :to_label, {}, {:label => "Lookup key", :disabled => true}
    else # new lookup key with no particular context
      # Give a select for choosing the parent lookup key
      f.collection_select :lookup_key_id, LookupKey.all, :id, :to_label, { :include_blank => 'None' }, {:label => "Lookup key"}
    end unless @lookup_key or f.parent_builder.try(:object).is_a? LookupKey # nested value form in a tab of puppetclass/_form: no edition allowed, and the lookup key is already visible as a context
  %>

  <div class="field">
    <%= f.label :matcher %><br />
    <%= f.text_field :matcher %>
  </div>
  <div class="field">
    <%= f.label :value %><br />
    <%= f.text_field :value %>
  </div>

</div>
